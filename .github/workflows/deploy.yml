name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
jobs:
  generate-file:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Set up Python
        uses: actions/setup-python@v5.4.0
        with:
          python-version: "3.9"
      - name: Run Python script to generate file
        run: |
          python app.py
      - name: Upload generated input file as artifact
        uses: actions/upload-artifact@v4.6.1
        with:
          name: input.json
          path: |
            test/input.json
      - name: Download the input.json file
        uses: actions/download-artifact@v4.1.9
        with:
          name: input.json
          path: ./test
      - name: Run Python script to generate output file
        run: |
          python test.py
      - name: Upload generated output file as artifact
        uses: actions/upload-artifact@v4.6.1
        with:
          name: output.xml
          path: |
            test/output.xml
      # - name: Check for changes in deployment.yml
      #   id: check_changes
      #   run: |
      #     git fetch origin main
      #     git diff --name-only origin/main HEAD > changed_files.txt
      #     if grep -q 'conf/deployment.yml' changed_files.txt; then
      #       echo "has_changes=true" >> $GITHUB_ENV
      #     else
      #       echo "has_changes=false" >> $GITHUB_ENV
      #     fi
      - name: Workflow deployment (assets only upload)
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1
          git diff --name-only origin/${{ github.event.pull_request.base.ref }} > changed_files.txt
          if grep -q 'conf/deployment.yml' changed_files.txt; then
            echo "has_changes=true"
          else
            echo "has_changes=false"
          fi


      # - name: Push to new branch and create pull request
      #   run: |
      #     git config --global user.name "${{ secrets.SECRET_GITHUB_USER_NAME }}"
      #     git config --global user.email "${{ secrets.SECRET_GITHUB_USER_EMAIL }}"
      #     if git diff --quiet && git diff --staged --quiet; then
      #       echo "No changes detected. Skipping commit and push."
      #       exit 0
      #     fi
      #     git add .
      #     git commit -m "Auto generated test file"
      #     git push origin $branch_name
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.SECRET_GITHUB_TOKEN }}
      # - name: Print Confirmation message
      #   run: echo "Files have been successfully uploaded to the artifact store."
